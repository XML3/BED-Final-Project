// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id            String @id @default(uuid())
  username      String @unique
  password      String
  name          String
  email         String
  phoneNumber   String
  profilePicture    String
  reviews        Review[]
  bookings       Booking[]
}

model Host {
  id            String @id @default(uuid())
  username      String @unique
  password      String
  name          String
  email         String
  phoneNumber   String
  profilePicture    String
  aboutMe       String
  listings      Property[]
  }
  
//Property
model Booking {
  id              String @id @default(uuid())
    //relations
  userId          String
  propertyId      String  
  checkinDate     DateTime
  checkoutDate    DateTime
  numberOfGuests  Int
  totalPrice      Int
  bookingStatus   String

  user        User              @relation(fields: [userId], references: [id])
  property    Property    @relation(fields: [propertyId], references: [id])
   @@index([userId])
   @@index([propertyId])
}

model Review {
  id              String @id @default(uuid())
    //relations
  userId          String
  propertyId      String
  rating          Int
  comment         String //LONGTEXT?

  property Property @relation(fields: [propertyId], references: [id])
  user  User @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([propertyId])
}

//many to many
model Amenity {
  id              String @id @default(uuid())
  name            String

  properties        Property[]
}

model Property {
  id              String @id @default(uuid())
  //relations
  hostId          String 
  title           String
  description     String
  location        String
  pricePerNight   Decimal
  bedroomCount    Int
  maxGuestCount   Int
  rating          Int

  host Host         @relation(fields: [hostId], references: [id])
  amenities         Amenity[]
  bookings           Booking[]
  reviews           Review[]
 
@@index([hostId])
}